{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypePrettyCode from 'rehype-pretty-code';\nimport rehypeSlug from 'rehype-slug';\n\nconst Project = defineDocumentType(() => ({\n  name: 'Project',\n  filePathPattern: `projects/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    id: { type: 'number', required: true },\n    title: { type: 'string', required: true },\n    description: { type: 'string' },\n    category: { type: 'string' },\n    publishedAt: { type: 'date', required: true },\n    techs: { type: 'string' },\n    banner: { type: 'string' },\n    link: { type: 'string' },\n    github: { type: 'string' },\n    duration: { type: 'number' },\n    featured: { type: 'boolean' },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (doc) => `/${doc._raw.flattenedPath}`,\n    },\n    readTime: {\n      type: 'number',\n      resolve: (doc) => {\n        const wordsPerMinute = 200;\n        const noOfWords = doc.body.raw.split(/\\s/g).length;\n        const minutes = noOfWords / wordsPerMinute;\n        const readTime = Math.ceil(minutes);\n        return readTime;\n      },\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: 'src/contents',\n  documentTypes: [Project],\n  mdx: {\n    cwd: process.cwd(),\n    rehypePlugins: [\n      rehypeSlug,\n      [\n        /**\n         * Adds auto-linking button after h1, h2, h3 headings\n         */\n        rehypeAutolinkHeadings,\n        {\n          behavior: 'wrap',\n          // test: ['h2', 'h3'],\n          properties: { class: 'heading-link' },\n          // content: '#',\n          // content: s(\n          //   'svg',\n          //   {\n          //     xmlns: 'http://www.w3.org/2000/svg',\n          //     viewBox: '0 0 24 24',\n          //     width: '24',\n          //     height: '24',\n          //     fill: 'none',\n          //     stroke: 'currentColor',\n          //     'stroke-width': '2',\n          //     'stroke-linecap': 'round',\n          //     'stroke-linejoin': 'round',\n          //     'aria-label': 'Anchor link',\n          //   },\n          //   // [\n          //   //   s('line', { x1: '4', y1: '9', x2: '20', y2: '9' }),\n          //   //   s('line', { x1: '4', y1: '15', x2: '20', y2: '15' }),\n          //   //   s('line', { x1: '10', y1: '3', x2: '8', y2: '21' }),\n          //   //   s('line', { x1: '16', y1: '3', x2: '14', y2: '21' }),\n          //   // ]\n          // ),\n        },\n      ],\n      [\n        rehypePrettyCode,\n        {\n          theme: 'github-dark',\n          onVisitLine(node: any) {\n            if (node.children.length === 0) {\n              node.children = [{ type: 'text', value: ' ' }];\n            }\n          },\n        },\n      ],\n    ],\n  },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AAEvB,IAAM,UAAU,mBAAmB,OAAO;AAAA,EACxC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,IAAI,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACrC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,SAAS;AAAA,IAC9B,UAAU,EAAE,MAAM,SAAS;AAAA,IAC3B,aAAa,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IAC5C,OAAO,EAAE,MAAM,SAAS;AAAA,IACxB,QAAQ,EAAE,MAAM,SAAS;AAAA,IACzB,MAAM,EAAE,MAAM,SAAS;AAAA,IACvB,QAAQ,EAAE,MAAM,SAAS;AAAA,IACzB,UAAU,EAAE,MAAM,SAAS;AAAA,IAC3B,UAAU,EAAE,MAAM,UAAU;AAAA,EAC9B;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,IAC9C;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ;AAChB,cAAM,iBAAiB;AACvB,cAAM,YAAY,IAAI,KAAK,IAAI,MAAM,KAAK,EAAE;AAC5C,cAAM,UAAU,YAAY;AAC5B,cAAM,WAAW,KAAK,KAAK,OAAO;AAClC,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,OAAO;AAAA,EACvB,KAAK;AAAA,IACH,KAAK,QAAQ,IAAI;AAAA,IACjB,eAAe;AAAA,MACb;AAAA,MACA;AAAA;AAAA;AAAA;AAAA,QAIE;AAAA,QACA;AAAA,UACE,UAAU;AAAA;AAAA,UAEV,YAAY,EAAE,OAAO,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAuBtC;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,YAAY,MAAW;AACrB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC/C;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
